name: CI
on:
  push:
  pull_request:

env:
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  COVERAGE: '0'
  SYMFONY_DEPRECATIONS_HELPER: max[self]=0
  DATABASE_URL: postgres://siap:siap@localhost/siap

jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - 8.1
          - 8.2
        include:
          - php: 8.1
            coverage: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup postgres
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -d template1 -c "CREATE USER siap WITH PASSWORD 'siap' CREATEDB"
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring, pdo_pgsql
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --ansi
      - name: Project Setup
        run: |
          bin/console lexik:jwt:generate-keypair
          bin/console doctrine:database:create --env=test
          bin/console doctrine:schema:create --env=test
      - name: Clear test app cache
        run: bin/console cache:clear --ansi
      - name: Run phpunit tests
        run: |
          mkdir -p build/logs/phpunit
          if [ "$COVERAGE" = '1' ]; then
            vendor/bin/phpunit --log-junit build/logs/phpunit/junit.xml --coverage-clover build/logs/phpunit/clover.xml
          else
            vendor/bin/phpunit --log-junit build/logs/phpunit/junit.xml
          fi
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: phpunit-logs-php${{ matrix.php }}
          path: build/logs/phpunit
        continue-on-error: true
      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v3
        with:
          directory: build/logs/phpunit
          name: phpunit-php${{ matrix.php }}
          flags: phpunit
          fail_ci_if_error: true
        continue-on-error: true

  behat:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - 8.1
          - 8.2
        include:
          - php: 8.1
            coverage: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup postgres
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -d template1 -c "CREATE USER siap WITH PASSWORD 'siap' CREATEDB"
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring, pdo_pgsql
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --ansi
      - name: Project Setup
        run: |
          bin/console lexik:jwt:generate-keypair
          bin/console doctrine:database:create --env=test
          bin/console doctrine:schema:create --env=test
      - name: Clear test app cache
        run: bin/console cache:clear --ansi
      - name: Run behat tests
        run: |
          mkdir -p build/logs/behat
          vendor/bin/behat -fprogress
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: behat-logs-php${{ matrix.php }}
          path: build/logs/behat
        continue-on-error: true
      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v3
        with:
          directory: build/logs/behat
          name: behat-php${{ matrix.php }}
          flags: behat
          fail_ci_if_error: true
        continue-on-error: true
